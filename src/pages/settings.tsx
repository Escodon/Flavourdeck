import Head from "next/head";
import { useRouter } from "next/router";
import { useState } from "react";
import log from "./api/log";
import { getUserSettings, syncUserSettings } from "./api/users/functions";

export default async function UserSettings() {
	const router = useRouter();
  const { uid } = router.query;
	const [email, setEmail] = useState("");
	const [name, setName] = useState("");
  console.log("uid:", uid);
	if (typeof uid !== "string") {
		log(
			"FATAL ERROR: UID isnt a string! Redirecting to /404...",
			"userSettings/errorCheck"
		);
		router.push("/404");
		return;
	}
  let user = await getUserSettings(uid);

	/**
	 * Updates the user settings
	 * @returns {void}
	 */
	async function updateSettings() {
		log("Updating user settings", "settings/updateSettings");
		let oldSettings;
		if (typeof uid === "string") {
			//becuase vsc gets grumpy
			oldSettings = await getUserSettings(uid);
			if (oldSettings == undefined) {
				console.error("User settings are undefined! Cannot update settings!");
				return;
			}
		} else {
			console.error("uid is not a string:", uid);
		}
		let newName = name ?? "Unknown"; // If name is null
		let newEmail;
		if (oldSettings) {
			newEmail = email ?? oldSettings.email; // If email is null
		} else {
			newEmail = email ?? "default@email.com"; // Use a default email if oldSettings is undefined
		}
		log("Uploading user settings to database", "settings/updateSettings");
		let settingsToDB = {
			uid: uid ?? "123456",
			displayName: newName,
			email: newEmail,
			darkMode: false, // TBD
		};
		await syncUserSettings(settingsToDB);
	}

	log("Rendering user settings page for user with uid " + uid, "settings");

	return (
		<>
			<Head>
				<title>Flavourdeck</title>
				<meta name="description" content="Generated by create next app" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<main>
				<h1>Settings - {user ? user.email : "No user logged in"}</h1>
				<p>UID: {uid}</p>
				<h2>User profile:</h2>
				<p>
					Name:{" "}
					{user ? user.displayName : "unknown"}
				</p>
				<input
					type="text"
					placeholder="Change your name"
					onChange={(e) => setName(e.target.value)}
				/>
				<br />
				<p>Email: {user ? user.email : "unknown email"}</p>
				<input
					type="text"
					placeholder="Change your email"
					onChange={(e) => setEmail(e.target.value)}
				/>
				<br />
				<p>Profile picture:</p>
				<input type="file" />
				<br />
				<button className="primary" onClick={updateSettings}>
					Save
				</button>
			</main>
		</>
	);
}
