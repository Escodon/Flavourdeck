import Head from "next/head";
import { useRouter } from "next/router";
import { useState } from "react";
import log from "./api/log";
import { listenForUser } from "./api/users/functions";

export default function UserSettings() {
	const router = useRouter();
	const { uid } = router.query;
	//const [user, setUser] = useState("");
	const [email, setEmail] = useState("");
	const [name, setName] = useState("");
	type User = {
		displayName: string | null;
		email: string | null;
		uid: string | null;
	};

	// Create a state variable for localUser
	const [localUser, setLocalUser] = useState<User | null>(null);

	listenForUser((user) => {
		if (!user) {
			log("User is null! Redirecting to login page", "settings/listenForUser");
			router.push({
				pathname: "/login",
				query: {
					then: "/settings",
					thenDisplayName: "Settings",
				},
			});
		} else {
			// Set localUser to the new user
			setLocalUser(user);
			console.log(JSON.stringify(user));
			log("User signed in. Continuing...", "settings/listenForUser");
		}
	});

	/**
	 * Updates the user settings
	 * @returns {void}
	 */
	function updateSettings() {
		log("Updating user settings", "settings/updateSettings");
		if (localUser == null) {
			console.error("User is null! Cannot update settings!");
			return;
		}
		log("Updating user settings (cache)", "settings/updateSettings");
		let newName = name;
		let newEmail = email;
		log(
			"Complete! Updating user settings (database)",
			"settings/updateSettings"
		);
		let settingsToDB = {
			uid: user.uid,
			displayName: newName,
			email: newEmail,
			darkMode: false, // To be implamented
		};
		//syncUserSettings(settingsToDB);
	}

	log("Rendering user settings page for user with uid " + localUser?.uid, "settings");
	log("User iss " + JSON.stringify(localUser), "settings");

	return (
		<>
			<Head>
				<title>Flavourdeck</title>
				<meta name="description" content="Generated by create next app" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<main>
				<h1>Settings</h1>
				<p>UID: {JSON.stringify(localUser?.uid)}</p>
				<h2>User profile:</h2>
				<p>Name: {localUser ? localUser.displayName : "Unknown"}</p>
				<input
					type="text"
					placeholder="Change your name"
					onChange={(e) => setName(e.target.value)}
				/>
				<br />
				<p>Email: {localUser ? localUser.email : "unknown email"}</p>
				<input
					type="text"
					placeholder="Change your email"
					onChange={(e) => setEmail(e.target.value)}
				/>
				<br />
				<p>Profile picture:</p>
				<input type="file" />
				<br />
				<button className="primary" onClick={updateSettings}>
					Save
				</button>
			</main>
		</>
	);
}
